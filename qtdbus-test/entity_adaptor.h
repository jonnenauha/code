/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp entity_interface.xml -a entity_adaptor
 *
 * qdbusxml2cpp is Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef ENTITY_ADAPTOR_H_1249386283
#define ENTITY_ADAPTOR_H_1249386283

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface org.realxtend.Test.Entity
 */
class EntityAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.realxtend.Test.Entity")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.realxtend.Test.Entity\" >\n"
"    <property access=\"readwrite\" type=\"s\" name=\"component\" />\n"
"  </interface>\n"
        "")
public:
    EntityAdaptor(QObject *parent);
    virtual ~EntityAdaptor();

public: // PROPERTIES
    Q_PROPERTY(QString component READ component WRITE setComponent)
    QString component() const;
    void setComponent(const QString &value);

public Q_SLOTS: // METHODS
Q_SIGNALS: // SIGNALS
};

#endif
